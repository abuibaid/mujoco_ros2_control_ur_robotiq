<?xml version="1.0" encoding='utf-8'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="robotiq_ros2_control"
    params="name initial_positions_file ros2_control_hardware_type tf_prefix using_position_pid:=false">
    <xacro:property name="initial_positions"
      value="${xacro.load_yaml(initial_positions_file)['initial_positions']}" />

    <ros2_control name="${name}" type="system">
      <hardware>
        <xacro:if value="${ros2_control_hardware_type == 'mock_components'}">
          <plugin>mock_components/GenericSystem</plugin>
        </xacro:if>
        <xacro:if value="${ros2_control_hardware_type == 'isaac'}">
          <plugin>topic_based_ros2_control/TopicBasedSystem</plugin>
          <param name="joint_commands_topic">/isaac_joint_commands</param>
          <param name="joint_states_topic">/isaac_joint_states</param>
        </xacro:if>
        <xacro:if value="${ros2_control_hardware_type == 'mujoco'}">
          <plugin>mujoco_ros2_control/MujocoSystem</plugin>
        </xacro:if>
      </hardware>


      <xacro:macro name="configure_joint" params="joint_name mimicing_joint multiplier">
        <joint name="${joint_name}">
          <!-- Set PID or position interface depending on configuration -->
          <xacro:if value="${using_position_pid}">
            <!-- Use position_pid interface -->
            <param name="position_kp">3000</param>
            <param name="position_ki">1</param>
            <param name="position_kd">100</param>
            <param name="position_i_max">10000</param>
            <command_interface name="position_pid" />
          </xacro:if>
          <xacro:unless value="${using_position_pid}">
            <!-- Non-PID interface depends on hardware type -->
            <xacro:if value="${ros2_control_hardware_type == 'mujoco'}">
              <command_interface name="position" />
            </xacro:if>
            <xacro:unless value="${ros2_control_hardware_type == 'mujoco'}">
              <!-- Also apply PID gains even if not using full PID controller -->
              <param name="position_kp">3000</param>
              <param name="position_ki">1</param>
              <param name="position_kd">100</param>
              <param name="position_i_max">10000</param>
              <command_interface name="position_pid" />
            </xacro:unless>
          </xacro:unless>
          <param name="mimic">${mimicing_joint}</param>
          <param name="multiplier">${multiplier}</param>
          <state_interface name="position">
            <param name="initial_value">0.0</param>
          </state_interface>
          <state_interface name="velocity">
            <param name="initial_value">0.0</param>
          </state_interface>
        </joint>
      </xacro:macro>

      <joint name="${tf_prefix}robotiq_85_left_knuckle_joint">
        <command_interface name="position" />
        <state_interface name="position">
          <param name="initial_value">0.0</param>
        </state_interface>
        <state_interface name="velocity">
          <param name="initial_value">0.0</param>
        </state_interface>
      </joint>


      <xacro:configure_joint joint_name="${tf_prefix}robotiq_85_left_inner_knuckle_joint"
        mimicing_joint="${tf_prefix}robotiq_85_left_knuckle_joint" multiplier="0" />
      <xacro:configure_joint joint_name="${tf_prefix}robotiq_85_left_finger_tip_joint"
        mimicing_joint="${tf_prefix}robotiq_85_left_knuckle_joint" multiplier="-1" />
      <xacro:configure_joint joint_name="${tf_prefix}robotiq_85_right_knuckle_joint"
        mimicing_joint="${tf_prefix}robotiq_85_left_knuckle_joint" multiplier="0" />
      <xacro:configure_joint joint_name="${tf_prefix}robotiq_85_right_inner_knuckle_joint"
        mimicing_joint="${tf_prefix}robotiq_85_left_knuckle_joint" multiplier="0" />
      <xacro:configure_joint joint_name="${tf_prefix}robotiq_85_right_finger_tip_joint"
        mimicing_joint="${tf_prefix}robotiq_85_left_knuckle_joint" multiplier="-1" />




    </ros2_control>
  </xacro:macro>


</robot>
